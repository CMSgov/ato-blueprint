# Default HTTP redirect.
<VirtualHost *:80>
  ServerName q.govready.com
  <IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteRule (.*) https://q.govready.com%{REQUEST_URI}
  </IfModule>
</VirtualHost>

# Default HTTPS virtual host so that no Django backend gets
# a request from an unrecognized host.
<VirtualHost *:443>
  SSLEngine on
  SSLCertificateKeyFile /home/govready-q/ssl_certificate.key
  SSLCertificateFile /home/govready-q/ssl_certificate.crt
  SSLCertificateChainFile /home/govready-q/ssl_certificate.crt
  <IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteRule (.*) https://q.govready.com%{REQUEST_URI}
  </IfModule>
</VirtualHost>

# HTTP redirect for q.govready.com and org subdomains.
<VirtualHost *:80>
  ServerName q.govready.com
  ServerAlias *.q.govready.com
  <IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
  </IfModule>
</VirtualHost>

<VirtualHost *:443>
  # Recognize the q domain name and organization subdomains.
  ServerName q.govready.com
  ServerAlias *.govready.com
  UseCanonicalName Off

  # Enable HTTPS.
  SSLEngine on
  SSLCertificateKeyFile /home/govready-q/ssl_certificate.key
  SSLCertificateFile /home/govready-q/ssl_certificate.crt
  SSLCertificateChainFile /home/govready-q/ssl_certificate.crt
  Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload;"

  # Use modern settings to be the most secure: https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
  SSLProtocol TLSv1.2
  SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256

  #LoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so
  #
  # mod_proxy_uwsgi wasn't working. We kept getting errors like:
  # [proxy:error] [pid 18126] (111)Connection refused: AH00957: uwsgi: attempt to connect to 127.0.0.1:0 (*) failed
  # [:error] [pid 18126] [client 74.121.197.79:55762] failed to make connection to backend: 127.0.0.1:0
  # (Notice how the port is zero. Is that ok?)
  #
  # So we're just proxying using the HTTP protocol instead. See the uwsgi command-line flags.

  Alias /robots.txt /home/govready-q/public_html/static/robots.txt
  Alias /favicon.ico /home/govready-q/public_html/static/favicon.ico
  Alias /static/ /home/govready-q/public_html/static/

  # ProxyPass takes precedence over Alias, so we have to exclude
  # the paths to static assets using a negative lookahead group
  # in the regular expression.
  <LocationMatch ^/(?!static/|robots.txt|favicon.ico) >
    ProxyPass http://127.0.0.1:3031
    ProxyPreserveHost On
  </LocationMatch>

</VirtualHost>
