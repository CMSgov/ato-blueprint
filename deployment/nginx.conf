# Redirect HTTP => HTTPS.
server {
	listen 80 default;
	listen [::]:80 default;
	location / {
		return 301 https://$host$request_uri;
	}

	# Expose the Let's Encrypt challenge path over HTTP. HTTPS is not supported.
	location /.well-known/acme-challenge/ {
		root /home/ubuntu/public_html;
	}
	access_log off;
}

# Actual server.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name q.govready.com;
	root /home/site/public_html;
 
	ssl_certificate /etc/ssl/local/ssl_certificate.crt;
	ssl_certificate_key /etc/ssl/local/ssl_certificate.key;
	# See https://gist.github.com/konklone/6532544
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 +SHA !aNULL !eNULL !LOW !MD5 !EXP !DSS !PSK !SRP !kECDH !CAMELLIA !RC4 !SEED';
	ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
	ssl_session_cache   shared:SSL:10m;
	ssl_session_timeout 10m;
	keepalive_timeout   70;

	# How to handle downtime: add a return 503.	
	error_page 503 @maintenance;
	location @maintenance {
		rewrite (.*) /static/maintenance.html last;
	}

	location / {
		#return 503; # maintenance mode activated
		include uwsgi_params;
		uwsgi_pass unix:///tmp/uwsgi.sock;
	}

	location /static/ {
		expires 7d;
	}

	# typical gzip compression
	gzip             on;
	gzip_min_length  1000;
	gzip_types       text/plain application/xml application/json text/css application/x-javascript;
	gzip_disable     "MSIE [1-6]\.";
	gzip_vary on;
}


