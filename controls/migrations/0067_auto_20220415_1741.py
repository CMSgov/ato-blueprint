# Generated by Django 3.2.5 on 2022-04-15 17:41

import auto_prefetch
import django.db.models.deletion
import jsonfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("controls", "0066_alter_elementcontrol_status"),
    ]

    operations = [
        migrations.AlterField(
            model_name="elementcommoncontrol",
            name="element",
            field=auto_prefetch.ForeignKey(
                help_text="The Element (e.g., System, Component, Host) to which common controls are             associated.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="common_controls",
                to="controls.element",
            ),
        ),
        migrations.AlterField(
            model_name="elementcommoncontrol",
            name="oscal_catalog_key",
            field=models.CharField(
                blank=True,
                help_text="Catalog key from which catalog file can be derived (e.g.,             'NIST_SP-800-53_rev4')",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="elementcontrol",
            name="oscal_catalog_key",
            field=models.CharField(
                blank=True,
                help_text="Catalog key from which catalog file can be derived (e.g.,             'NIST_SP-800-53_rev4')",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalstatement",
            name="sid_class",
            field=models.CharField(
                blank=True,
                help_text="Statement identifier 'class' such as 'NIST_SP-800-53_rev4' or other OSCAL             catalog name Control ID.",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalstatement",
            name="source",
            field=models.CharField(
                blank=True,
                help_text="Statement source such as '../../../nist.gov/SP800-53/rev4/json/            NIST_SP-800-53_rev4_catalog.json'.",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalsystemassessmentresult",
            name="assessment_results",
            field=jsonfield.fields.JSONField(
                blank=True,
                help_text="JSON object representing the system assessment results associated             with a deployment.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="poam",
            name="milestones",
            field=models.TextField(
                blank=True,
                help_text="One or more milestones that identify specific actions to correct the             weakness with an associated completion date.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="poam",
            name="weakness_detection_source",
            field=models.CharField(
                blank=True,
                help_text=" Name of organization, vulnerability scanner, or other entity that first             identified the weakness.",
                max_length=180,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="poam",
            name="weakness_name",
            field=models.CharField(
                blank=True,
                help_text="Name for the identified weakness that provides a general idea of the             weakness.",
                max_length=254,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="statement",
            name="mentioned_elements",
            field=models.ManyToManyField(
                blank=True,
                help_text="All elements mentioned in a statement; elements with a first degree             relationship to the statement.",
                related_name="statements_mentioning",
                to="controls.Element",
            ),
        ),
        migrations.AlterField(
            model_name="statement",
            name="sid_class",
            field=models.CharField(
                blank=True,
                help_text="Statement identifier 'class' such as 'NIST_SP-800-53_rev4' or other OSCAL             catalog name Control ID.",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="statement",
            name="source",
            field=models.CharField(
                blank=True,
                help_text="Statement source such as '../../../nist.gov/SP800-53/rev4/json/            NIST_SP-800-53_rev4_catalog.json'.",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="system",
            name="root_element",
            field=auto_prefetch.ForeignKey(
                help_text="The Element that is this System. Element must be type [Application,             General Support System]",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="system",
                to="controls.element",
            ),
        ),
        migrations.AlterField(
            model_name="systemassessmentresult",
            name="assessment_results",
            field=jsonfield.fields.JSONField(
                blank=True,
                help_text="JSON object representing the system assessment results associated             with a deployment.",
                null=True,
            ),
        ),
    ]
